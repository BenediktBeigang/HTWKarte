stages:
  - build-image
  - deploy

variables:
  DOCKER_IMAGE: gitlab.dit.htwk-leipzig.de:5050/htwk-software/htwkarte
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""

.build:
  image: node:lts
  stage: build
  script:
    - npm clean-install --progress=false
    - npm run build

build-image:
  stage: build-image
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE:latest .
    - docker push $DOCKER_IMAGE:latest
  only:
    - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client sed # install dependencies
    - eval $(ssh-agent -s) # set some ssh variables
    - ssh-add <(echo "$CI_SSH_KEY" | tr -d '\r')
  script:
    # ssh to the server and start the service
    - >
      ssh -p $CI_SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR $CI_SSH_USER@$CI_SSH_HOST
      "cd /home/$CI_SSH_USER/docker/htwkarte/ &&
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
      (docker ps -q --filter 'name=htwkarte-container' | grep -q . && docker stop htwkarte-container && docker rm htwkarte-container) || true &&
      docker pull $DOCKER_IMAGE:latest &&
      docker run --name htwkarte-container -d -p 80:80 --rm $DOCKER_IMAGE:latest &&
      docker logout &&
      exit"
  only:
    - main


