stages:
  - build-image
  - deploy

variables:
  DOCKER_IMAGE: gitlab.dit.htwk-leipzig.de:5050/htwk-software/htwkarte
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""

.build:
  image: node:lts
  stage: build
  script:
    - npm clean-install --progress=false
    - npm run build

build-image:
  stage: build-image
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  tags:
    - docker
    - fdit
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE:latest .
    - docker push $DOCKER_IMAGE:latest
  #only:
  #  - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client sed # install dependencies
    - eval $(ssh-agent -s) # set some ssh variables
    - ssh-add <(echo "$CI_SSH_KEY" | tr -d '\r')
  tags:
    - docker
    - fdit
  script:
    # replace some placeholders
    - sed -i -e "s|DOCKER_REGISTRY_REPO|$CI_REGISTRY_IMAGE|" docker-compose.prod.yml
    # upload necessary files to the server
    - >
      scp -P $CI_SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR ./docker-compose.prod.yml ./nginx.conf
      $CI_SSH_USER@$CI_SSH_HOST:/home/$CI_SSH_USER/docker/htwkarte/
    # ssh to the server and start the service
    - >
      ssh -p $CI_SSH_PORT -o StrictHostKeyChecking=no -o LogLevel=ERROR $CI_SSH_USER@$CI_SSH_HOST
      "cd /home/$CI_SSH_USER/docker/htwkarte/ &&
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
      docker compose -f ./docker-compose.prod.yml down && docker compose -f ./docker-compose.prod.yml up -d --remove-orphans && docker logout "

  #only:
  #  - main

