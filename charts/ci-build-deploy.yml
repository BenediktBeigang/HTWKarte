stages:
  - build
  - package
  - deploy

build:
  stage: build
  image: docker:27
  services:
    - docker:dind
  before_script:
    - echo 'export COMMIT_TAG=${CI_COMMIT_TAG:-"latest"}' >> .env_file
    - source .env_file
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY_IMAGE"
    - |
      docker build \
      --build-arg "PROJECT_URL=$PROJECT_URL" \
      --pull \
      -t "$CI_REGISTRY_IMAGE:$COMMIT_TAG" \
      --target prod \
      .
    - docker push "$CI_REGISTRY_IMAGE:$COMMIT_TAG"
  artifacts:
    paths:
      - .env_file
    expire_in: 1 hour
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH == "main"'

package_helm_chart:
  stage: package
  image:
    name: alpine/helm:3
    entrypoint: [""]
  variables:
    VALUES_FILE: $CI_PROJECT_DIR/charts/values.yaml
    CHART_FILE: $CI_PROJECT_DIR/charts/Chart.yaml
  before_script:
    - echo "HELM_ARTIFACT_JOB_NAME=$CI_JOB_NAME" >> .env_file
    - source .env_file
  script:
    - echo "Updating deployment URLs..."
    - yq e -i '(.hosts.frontend // "default_value") = env(PROJECT_URL)' $VALUES_FILE
    - chart_name=$(yq e '.name' "$CHART_FILE")
    - yq e -i ".chartName = \"$chart_name\"" $VALUES_FILE
    - yq e -i '(.image.repository) = env(CI_REGISTRY_IMAGE)' $VALUES_FILE
    - yq e -i '(.image.tag) = env(COMMIT_TAG)' $VALUES_FILE
    - yq e -i 'explode(.)' "$VALUES_FILE"
    - helm dependency update ./charts
    - helm package ./charts --destination ./
  artifacts:
    paths:
      - "*.tgz"
      - .env_file
    expire_in: 1 hour
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH == "main"'

trigger_deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
    - source .env_file
  script:
    - echo "Triggering deploy pipeline ..."
    - |
      curl -X POST \
      -F "token=$CI_DEPLOY_REPO_TRIGGER_TOKEN" \
      -F "ref=$CI_DEPLOY_REPO_REF" \
      -F "variables[UPSTREAM_PROJECT_NAME]=$CI_PROJECT_NAME" \
      -F "variables[UPSTREAM_PROJECT_ID]=$CI_PROJECT_ID" \
      -F "variables[UPSTREAM_COMMIT_REF_NAME]=$CI_COMMIT_REF_NAME" \
      -F "variables[UPSTREAM_HELM_ARTIFACT_JOB_NAME]=$HELM_ARTIFACT_JOB_NAME" \
      -F "variables[UPSTREAM_REGISTRY_PATH]=$CI_REGISTRY_IMAGE" \
      "$CI_API_V4_URL/projects/$CI_DEPLOY_REPO_ID/trigger/pipeline"
    - "echo 'The $CI_PROJECT_NAME can be viewed on: $PROJECT_URL'"
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH == "main"'
